// Generated by ts-to-zod
import { z } from "zod";

const jSONValueSchema = z.any();

export const mutationSchema = z.object({
  id: z.number(),
  name: z.string(),
  args: jSONValueSchema.optional(),
});

export const pullRequestSchema = z.object({
  clientID: z.string(),
  cookie: jSONValueSchema.optional(),
  pullVersion: z.number(),
  schemaVersion: z.string(),
});

export const patchOperationSchema = z.union([
  z.object({
    op: z.literal("put"),
    key: z.string(),
    value: jSONValueSchema.optional(),
  }),
  z.object({
    op: z.literal("del"),
    key: z.string(),
  }),
  z.object({
    op: z.literal("clear"),
  }),
]);

export const pushRequestSchema = z.object({
  clientID: z.string(),
  mutations: z.array(mutationSchema),
  pushVersion: z.number(),
  schemaVersion: z.string(),
});

export const pullResponseSchema = z.object({
  cookie: jSONValueSchema.optional(),
  lastMutationID: z.number(),
  patch: z.array(patchOperationSchema),
});
